// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("userCtrl", function($scope, $timeout, $http, $routeParams, $location) {
  var follow, legalFeedTypes, user, userid;
  userid = $routeParams.id;
  $scope.myself = $scope.UID === userid;
  $scope.$on("$viewContentLoaded", function() {
    return $scope.$emit("pageChange", "user");
  });
  legalFeedTypes = ["ask", "answer", "love"];
  $scope.feedType = "ask";
  $scope.ta = "TA";
  $scope.loadingMore = function() {
    return $scope.isLoading = true;
  };
  $scope.switchFeed = function(type) {
    type = type || "ask";
    $scope.feedType = type;
    return $scope.isLoading = false;
  };
  $scope.profile = null;
  user = {
    init: function() {
      user.getMyAsk();
      $timeout(user.getMyAnswer, 500);
      $scope.myAskMsg = $scope.myAnswerMsg = $scope.myLoveMsg = "";
      $scope.myAsk = $scope.myAnswer = $scope.myLove = [];
      $scope.myAskMore = $scope.myAnswerMore = $scope.myLoveMore = false;
      $scope.$on("getUserInfoCb", function(event, data) {
        return user.getUserInfoCb(data);
      });
      return $timeout(user.getUserInfo, 100);
    },
    getMyAsk: function() {
      var api;
      api = "" + API.myask + $scope.privacyParamDir;
      if (IsDebug) {
        api = API.myask;
      }
      return $http.get(api).success(user.getMyAskCb);
    },
    getMyAskCb: function(data) {
      if (String(data.msg) === "ok") {
        return $scope.myAsk = data.result || [];
      } else {
        return $scope.myAskMsg = data.msg;
      }
    },
    getMyAnswer: function() {
      var api;
      api = "" + API.myanswer + $scope.privacyParamDir;
      if (IsDebug) {
        api = API.myanswer;
      }
      return $http.get(api).success(user.getMyAnswerCb);
    },
    getMyAnswerCb: function(data) {
      if (String(data.msg) === "ok") {
        return $scope.myAnswer = data.result || [];
      } else {
        return $scope.myAnswerMsg = data.msg;
      }
    },
    getUserInfo: function() {
      return $scope.$emit("getUserInfo", {
        uid: userid
      });
    },
    getUserInfoCb: function(data) {
      var msg, result, ret;
      msg = data.msg, ret = data.ret, result = data.result;
      if (String(ret) === "100000") {
        $scope.profile = result;
        $scope.iffollow = result.iffollow;
        follow.setFollowBtn(result.iffollow);
        if (!$scope.myself) {
          switch ("" + result.sex) {
            case "1":
              return $scope.ta = "他";
            case "2":
              return $scope.ta = "她";
          }
        } else {
          return $scope.ta = "我";
        }
      }
    }
  };
  user.init();
  $scope.askHim = function() {
    return $scope.showAskBox = !$scope.showAskBox;
  };
  $scope.isFollowSending = false;
  follow = {
    init: function() {
      $scope.follow = follow.follow;
      $scope.unfollow = follow.unfollow;
      $scope.$on("followCb", function(event, data) {
        return follow.onFollowCb(data);
      });
      $scope.$on("unfollowCb", function(event, data) {
        return follow.onUnfollowCb(data);
      });
      return $scope.followFn = function() {
        switch (Number($scope.iffollow)) {
          case 0:
            return follow.follow();
          case 1:
            return follow.unfollow();
          case 2:
            return follow.unfollow();
        }
      };
    },
    follow: function() {
      $scope.isFollowSending = true;
      return $scope.$emit("follow", {
        userid: userid
      });
    },
    unfollow: function() {
      $scope.isFollowSending = true;
      return $scope.$emit("unfollow", {
        userid: userid
      });
    },
    onFollowCb: function(data) {
      var msg, result, ret, toastType;
      msg = data.msg, ret = data.ret, result = data.result;
      toastType = "";
      if (msg === "ok") {
        msg = "关注成功!";
      }
      if (String(ret) === "100000") {
        $scope.iffollow = result;
        follow.setFollowBtn(result);
        $scope.profile.count_followed = $scope.profile.count_followed - 0 + 1;
        $scope.user.count_follow = $scope.user.count_follow - 0 + 1;
      } else {
        toastType = "warn";
      }
      $scope.toast(msg, toastType);
      return $scope.isFollowSending = false;
    },
    onUnfollowCb: function(data) {
      var msg, result, ret, toastType;
      msg = data.msg, ret = data.ret, result = data.result;
      toastType = "";
      if (msg === "ok") {
        msg = "取消关注成功!";
      }
      if (String(ret) === "100000") {
        $scope.iffollow = result;
        follow.setFollowBtn(result);
        $scope.profile.count_followed -= 1;
        $scope.user.count_follow -= 1;
      } else {
        toastType = "warn";
      }
      $scope.toast(msg, toastType);
      return $scope.isFollowSending = false;
    },
    setFollowBtn: function(iffollow) {
      var followBtn;
      iffollow = iffollow || 0;
      followBtn = {};
      switch (Number(iffollow)) {
        case 0:
          followBtn = {
            txt: "",
            cls: "success"
          };
          break;
        case 1:
          followBtn = {
            txt: "取消",
            cls: "warning"
          };
          break;
        case 2:
          followBtn = {
            txt: "互相",
            cls: "warning"
          };
      }
      followBtn.txt += "关注";
      return $scope.followBtn = followBtn;
    }
  };
  return follow.init();
});
