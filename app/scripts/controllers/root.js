// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("rootCtrl", function($scope, $cookieStore, $http, $timeout, $storage) {
  var API, BODY, DOC, IsDebug, IsWebapp, LOC, WIN, accessToken, elMwrap, getUserInfo, getUserInfoCb, getUserInfoErrorCb, setUserInfo, store, toggleMBill, toggleMDesign, toggleMMenu, uid, username;
  WIN = $scope.WIN;
  DOC = $scope.DOC;
  LOC = $scope.LOC;
  BODY = $scope.BODY;
  API = $scope.API;
  IsDebug = $scope.IsDebug;
  IsWebapp = $scope.IsWebapp;
  $storage.put = $storage.set;
  store = IsWebapp ? $storage : $cookieStore;
  $scope.page = "home";
  $scope.accessToken = $scope.UID = void 0;
  $scope.isLogin = false;
  $scope.$on("onLogined", function(detail, result) {
    var user;
    $scope.isLogin = true;
    $scope.accessToken = result["accesstoken"];
    user = result["user"];
    $scope.UID = user["userid"];
    setUserInfo(user);
    $scope.user.accessToken = accessToken;
    store.put("mUID", user["userid"]);
    store.put("mUsername", user["username"]);
    return store.put("mAccessToken", $scope.accessToken);
  });
  setUserInfo = function(user) {
    $scope.user.username = user["username"] || "";
    $scope.user.email = user["email"] || "";
    $scope.user.face = user["face"] || "";
    $scope.user.face_60 = user["face_60"] || "";
    $scope.user.face_120 = user["face_120"] || "";
    $scope.user.sex = user["sex"] || "1";
    $scope.user.blog = user["blog"] || "";
    return $scope.user.uid = user["userid"] || "";
  };
  getUserInfo = function() {
    var url;
    url = ("" + API.userInfo) + (IsDebug ? "" : "/" + uid) + ("" + $scope.privacyParam);
    return $http.get(url).success(getUserInfoCb).error(getUserInfoErrorCb);
  };
  getUserInfoCb = function(data) {
    var ret, user;
    ret = data["ret"];
    if (ret === "100000") {
      user = data["result"];
      return setUserInfo(user);
    }
  };
  getUserInfoErrorCb = function(data) {};
  $scope.user = {};
  uid = store.get("mUID");
  accessToken = store.get("mAccessToken");
  username = store.get("mUsername");
  if (uid && accessToken) {
    $scope.isLogin = true;
    $scope.user.uid = $scope.UID = uid;
    $scope.accessToken = accessToken;
    $scope.user.face_60 = $scope.user.face_120 = $scope.DEFAULT_FACE;
    $scope.user.username = username;
    $scope.privacyParam = "?access_token=" + accessToken + "&userid=" + uid;
    getUserInfo();
  }
  $scope.supportNum = "1ä¸‡";
  $scope.$on("pageChange", function(e, msg) {
    return $scope.page = msg;
  });
  $scope.isMMenuOpen = false;
  $scope.toggleMMenu = toggleMMenu = function() {
    return $scope.isMMenuOpen = !$scope.isMMenuOpen;
  };
  $scope.isMDesignOpen = false;
  $scope.isMDesignOpenMask = false;
  $scope.toggleMDesign = toggleMDesign = function(type) {
    if ($scope.isMDesignOpen) {
      $scope.isMDesignOpenMask = !$scope.isMDesignOpenMask;
      $timeout(function() {
        return $scope.isMDesignOpen = !$scope.isMDesignOpen;
      }, 200);
    } else {
      $scope.isMDesignOpen = !$scope.isMDesignOpen;
      $timeout(function() {
        return $scope.isMDesignOpenMask = !$scope.isMDesignOpenMask;
      }, 200);
    }
    if ($scope.isMBillOpen) {
      toggleMBill();
    }
    if (type && $scope.isMDesignOpen) {
      $scope.$broadcast("setMDesignType", type);
    }
    if (!$scope.isMDesignOpen) {
      return $scope.$broadcast("cancelMDesingSending");
    }
  };
  $scope.isMBillOpen = false;
  $scope.isMBillOpenMask = false;
  $scope.toggleMBill = toggleMBill = function(type) {
    if ($scope.isMBillOpen) {
      $scope.isMBillOpenMask = !$scope.isMBillOpenMask;
      return $timeout(function() {
        return $scope.isMBillOpen = !$scope.isMBillOpen;
      }, 200);
    } else {
      $scope.isMBillOpen = !$scope.isMBillOpen;
      return $timeout(function() {
        return $scope.isMBillOpenMask = !$scope.isMBillOpenMask;
      }, 100);
    }
  };
  $scope.logout = function() {
    $scope.user = {};
    $cookieStore.remove("mUID");
    $cookieStore.remove("mAccessToken");
    return $scope.isLogin = false;
  };
  elMwrap = DOC["getElementById"]("m-wrap");
  $scope.scrollBody1Px = function() {
    if (elMwrap["scrollTop"] === 0) {
      return elMwrap["scrollTop"] = 1;
    }
  };
  return $scope.backToTop = function(isM) {
    return (isM ? elMwrap : BODY)["scrollTop"] = 0;
  };
});
