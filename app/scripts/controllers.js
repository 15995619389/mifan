// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("404Ctrl", function($scope) {
  $scope.awesomeThings = ["HTML5 Boilerplate", "AngularJS", "Karma"];
  $scope.$on("$viewContentLoaded", function() {
    return $scope.$emit("pageChange", "404");
  });
  return false;
});

// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("globalCtrl", function($scope) {
  var BASE_API_PATH, BODY, DOC, IsAndroid, IsAndroidPad, IsBlackBerry, IsChrome, IsDebug, IsIE, IsIEMobile, IsIOS, IsIPad, IsIPhone, IsPhone, IsTouch, IsWebapp, IsWeixin, IsWindowsPhone, LOC, NA, NG, UA, WIN;
  DOC = document;
  WIN = window;
  LOC = location;
  BODY = DOC['body'];

  /*
  设备是否支持触摸事件
  这里使用WIN.hasOwnProperty('ontouchend')在Android上会得到错误的结果
  @type {boolean}
   */
  IsTouch = "ontouchend" in WIN;
  NA = WIN.navigator;
  UA = NA.userAgent;
  IsAndroid = /Android|HTC/i.test(UA) || /Linux/i.test(NA.platform + "");
  IsAndroidPad = IsAndroid && /Pad/i.test(UA);
  IsIPad = !IsAndroid && /iPad/i.test(UA);
  IsIPhone = !IsAndroid && /iPod|iPhone/i.test(UA);
  IsIOS = IsIPad || IsIPhone;
  IsWindowsPhone = /Windows Phone/i.test(UA);
  IsBlackBerry = /BB10|BlackBerry/i.test(UA);
  IsIEMobile = /IEMobile/i.test(UA);
  IsIE = !!DOC.all;
  IsWeixin = /MicroMessenger/i.test(UA);
  IsChrome = !!WIN['chrome'];
  IsPhone = IsIPhone || (IsAndroid && !IsAndroidPad);
  IsWebapp = !!NA["standalone"];
  NG = WIN['angular'];
  $scope.WIN = WIN;
  $scope.DOC = DOC;
  $scope.LOC = LOC;
  $scope.BODY = BODY;
  $scope.IsIPhone = IsIPhone;
  $scope.IsIPad = IsIPad;
  $scope.IsIOS = IsIOS;
  $scope.IsAndroid = IsAndroid;
  $scope.IsAndroidPad = IsAndroidPad;
  $scope.IsIEMobile = IsIEMobile;
  $scope.IsWeixin = IsWeixin;
  $scope.IsTouch = $scope.IsMobile = IsTouch;
  $scope.IsChrome = IsChrome;
  $scope.IsIE = IsIE;
  $scope.IsPhone = IsPhone;
  $scope.IsWebapp = IsWebapp;
  IsDebug = LOC["port"] === "9000";
  $scope.IsDebug = IsDebug;
  BASE_API_PATH = "/mifan/service/index.php";
  $scope.API = {
    user: "" + BASE_API_PATH + "/user/usersession/user",
    userInfo: "" + BASE_API_PATH + "/user/userinfo/user/id"
  };
  if (IsDebug) {
    BASE_API_PATH = "/data";
    $scope.API = {
      user: "" + BASE_API_PATH + "/user.json",
      userInfo: "" + BASE_API_PATH + "/user-info.json"
    };
  }
  return $scope.DEFAULT_FACE = "http://mifan.us/public/images/user_normal.jpg";
});

// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("headCtrl", function($scope) {
  $scope.dropdownOpen = false;
  $scope.toggleDropdown = function() {
    return $scope.dropdownOpen = !$scope.dropdownOpen;
  };
  $scope.support = function() {
    return alert(1);
  };
  $scope.navs = [
    {
      page: "home",
      text: "首页"
    }, {
      page: "msg",
      text: "消息"
    }, {
      page: "me",
      text: "个人主页"
    }, {
      page: "friend",
      text: "朋友"
    }, {
      page: "hot",
      text: "排行"
    }
  ];
  $scope.remind = "米饭新增豆瓣登录!";
  return $scope.remind = "";
});

// Generated by CoffeeScript 1.7.1
Mifan.controller("homeAnswer", function($scope) {
  $scope.content = "回答我的";
  console.log("回答我的");
  return $scope.$emit("clearAnswerRemind");
});

// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("homeAskCtrl", function($scope) {
  $scope.askQuesConent = "";
  $scope.bgUrl = "images/beijing01.jpg";
  $scope.avatarUrl = "http://tp4.sinaimg.cn/2005321383/180/5698650002/1";
  $scope.isSending = false;
  $scope.onFocus = function() {
    return $scope.onInputing = true;
  };
  $scope.onBlur = function(force) {
    if (force || $scope.askQuesConent === "") {
      return $scope.onInputing = $scope.isSending = false;
    }
  };
  return $scope.send = function() {
    return $scope.isSending = true;
  };
});

// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("homeCtrl", [
  "$scope", "$routeParams", function($scope, $routeParams) {
    $scope.legalFeedTypes = ["news", "answer", "reply"];
    if (0 > $scope.legalFeedTypes.indexOf($routeParams.type)) {
      $routeParams.type = "news";
    }
    $scope.feedType = $routeParams.type;
    $scope.$on("$viewContentLoaded", function() {
      return $scope.$emit("pageChange", "home");
    });
    $scope.remind = {
      newsNum: 0,
      answerNum: 2,
      replyNum: '...'
    };
    $scope.$on("clearAnswerRemind", function() {
      return $scope.remind.answerNum = 0;
    });
    $scope.$on("clearReplyRemind", function() {
      return $scope.remind.replyNum = 0;
    });
    $scope.loadingMore = function() {
      return $scope.isLoading = true;
    };
    $scope.switchFeed = function(type) {
      return $scope.feedType = type || "news";
    };
    return false;
  }
]);

// Generated by CoffeeScript 1.7.1
Mifan.controller("homeNews", function($scope, $timeout) {
  $scope.content = "最新动态";
  $scope.toggleMBubble = function(index) {
    return $scope.newsCollect[index].bblActv = !$scope.newsCollect[index].bblActv;
  };
  return $scope.newsCollect = [
    {
      ques: {
        id: 1,
        username: "依然大头",
        face: "http://mifan.us/cache/user/0/0/48/7dfecd76fb_48_48.png",
        text: "女朋友要过生日了，买个什么礼物呢？ 具体一些哈~~大谢！"
      },
      ans: {
        id: 2,
        username: "老婆婆",
        face: "http://mifan.us/cache/user/0/0/48/6c9e391e64_48_48.jpg",
        text: "买一个上市公司送她，让她做老板。"
      },
      bblActv: false,
      bblActvShow: false
    }, {
      ques: {
        id: 1,
        username: "依然大头",
        face: "http://mifan.us/cache/user/0/0/48/7dfecd76fb_48_48.png",
        text: "女朋友要过生日了，买个什么礼物呢？ 具体一些哈~~大谢！"
      },
      ans: {
        id: 2,
        username: "老婆婆",
        face: "http://mifan.us/cache/user/0/0/48/6c9e391e64_48_48.jpg",
        text: "买一个上市公司送她，让她做老板。"
      },
      bblActv: false,
      bblActvShow: false
    }, {
      ques: {
        id: 1,
        username: "依然大头",
        face: "http://mifan.us/cache/user/0/0/48/7dfecd76fb_48_48.png",
        text: "女朋友要过生日了，买个什么礼物呢？ 具体一些哈~~大谢！"
      },
      ans: {
        id: 2,
        username: "老婆婆",
        face: "http://mifan.us/cache/user/0/0/48/6c9e391e64_48_48.jpg",
        text: "买一个上市公司送她，让她做老板。"
      },
      bblActv: false,
      bblActvShow: false
    }
  ];
});

// Generated by CoffeeScript 1.7.1
Mifan.controller("homeReply", function($scope) {
  $scope.content = "回应我的";
  console.log("回应我的");
  return $scope.$emit("clearReplyRemind");
});

// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("homeSideCtrl", function($scope) {
  return $scope.mifanAskContent = "情人节和谁过的？";
});

// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("loginCtrl", function($scope, $http, $timeout) {
  var API, IsDebug, IsWebapp, LOC, userLogin, userLoginErrorCb, userLoginSuccessCb;
  API = $scope.API;
  IsDebug = $scope.IsDebug;
  LOC = $scope.LOC;
  IsWebapp = $scope.IsWebapp;
  $scope.error = null;
  userLoginSuccessCb = function(data, status) {

    /*
    {
      "msg": "密码错误！",
      "ret": "104003"
    }
    
    {
      "msg": "Email不存在，你可能还没有注册！",
      "ret": "104002"
    }
    
    {
      "msg": "OK",
      "ret": "100000",
      "result": {}
    }
     */
    var result, ret;
    ret = data["ret"];
    if (ret === "100000") {
      result = data["result"];
      $scope.$emit("onLogined", result);
      LOC["href"] = "#!/";
    } else if (ret === "104003") {
      $scope.error = {
        type: "password",
        msg: "密码错误 :("
      };
    } else if (ret === "104002") {
      $scope.error = {
        type: "username",
        msg: "用户名不存在 T_T"
      };
    }
    if ($scope.error) {
      $timeout(function() {
        return $scope.error = null;
      }, 3000);
    }
    return $scope.isLoging = false;
  };
  userLoginErrorCb = function(data, status) {
    var ret;
    ret = data["ret"];
    return $scope.isLoging = false;
  };
  userLogin = function() {
    $scope.isLoging = true;
    return $http({
      method: IsDebug ? "GET" : "POST",
      url: API.user,
      data: {
        user_email: $scope.email,
        user_password: $scope.password
      }
    }).success(userLoginSuccessCb).error(userLoginErrorCb);
  };
  $scope.$on("$viewContentLoaded", function() {
    return $scope.$emit("pageChange", "login");
  });
  $scope.$watch("email + password", function() {
    return $scope.isLogValid = $scope.email && $scope.password;
  });
  $scope.isLoging = false;
  return $scope.onSubmit = function() {
    if ($scope.email && $scope.password) {
      return userLogin();
    }
  };
});

// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("meCtrl", function($scope) {
  $scope.$on("$viewContentLoaded", function() {
    return $scope.$emit("pageChange", "me");
  });
  return false;
});

// Generated by CoffeeScript 1.7.1
Mifan.controller("mBillCtrl", function($scope) {});

// Generated by CoffeeScript 1.7.1
Mifan.controller("mDesginCtrl", function($scope, $timeout) {
  var DOC, elMDesignTextarea, titleMap;
  DOC = $scope.DOC;
  elMDesignTextarea = DOC["getElementById"]("m-design-input");
  titleMap = {
    'ask': "提出问题",
    'comment': "评论"
  };
  $scope.$on("setMDesignType", function(detail, msg) {
    $scope.viewType = msg;
    $scope.title = titleMap[msg];
    return $timeout(function() {
      return elMDesignTextarea.focus();
    }, 800);
  });
  $scope.$on("cancelMDesingSending", function() {
    $scope.isSending = false;
    return $scope.mDesignContent = "";
  });
  return $scope.onSubmit = function() {
    return $scope.isSending = true;
  };
});

// Generated by CoffeeScript 1.7.1
Mifan.controller("mMenuCtrl", function($scope, $timeout) {});

// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("msgCtrl", function($scope, $rootScope) {
  var DOC;
  DOC = $scope.DOC;
  $scope.$on("$viewContentLoaded", function() {
    return $scope.$emit("pageChange", "msg");
  });
  $scope.focus = function() {
    return console.log(111);
  };
  return false;
});

// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("registerCtrl", function($scope) {
  $scope.$on("$viewContentLoaded", function() {
    return $scope.$emit("pageChange", "register");
  });
  $scope.$watch("email + password", function() {
    return $scope.isRegValid = $scope.email && $scope.password;
  });
  $scope.isReging = false;
  return $scope.regSubmit = function() {
    return $scope.isReging = true;
  };
});

// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("rootCtrl", function($scope, $cookieStore, $http, $timeout, $storage) {
  var API, BODY, DOC, IsDebug, IsWebapp, LOC, WIN, accessToken, elMwrap, getUserInfo, getUserInfoCb, getUserInfoErrorCb, setUserInfo, store, toggleMBill, toggleMDesign, toggleMMenu, uid, username;
  WIN = $scope.WIN;
  DOC = $scope.DOC;
  LOC = $scope.LOC;
  BODY = $scope.BODY;
  API = $scope.API;
  IsDebug = $scope.IsDebug;
  IsWebapp = $scope.IsWebapp;
  $storage.put = $storage.set;
  store = IsWebapp ? $storage : $cookieStore;
  $scope.page = "home";
  $scope.accessToken = $scope.UID = void 0;
  $scope.isLogin = false;
  $scope.$on("onLogined", function(detail, result) {
    var user;
    $scope.isLogin = true;
    $scope.accessToken = result["accesstoken"];
    user = result["user"];
    $scope.UID = user["userid"];
    setUserInfo(user);
    $scope.user.accessToken = accessToken;
    store.put("mUID", user["userid"]);
    store.put("mUsername", user["username"]);
    return store.put("mAccessToken", $scope.accessToken);
  });
  setUserInfo = function(user) {
    $scope.user.username = user["username"] || "";
    $scope.user.email = user["email"] || "";
    $scope.user.face = user["face"] || "";
    $scope.user.face_60 = user["face_60"] || "";
    $scope.user.face_120 = user["face_120"] || "";
    $scope.user.sex = user["sex"] || "1";
    $scope.user.blog = user["blog"] || "";
    return $scope.user.uid = user["userid"] || "";
  };
  getUserInfo = function() {
    var url;
    url = ("" + API.userInfo) + (IsDebug ? "" : "/" + uid) + ("" + $scope.privacyParam);
    return $http.get(url).success(getUserInfoCb).error(getUserInfoErrorCb);
  };
  getUserInfoCb = function(data) {
    var ret, user;
    ret = data["ret"];
    if (ret === "100000") {
      user = data["result"];
      return setUserInfo(user);
    }
  };
  getUserInfoErrorCb = function(data) {};
  $scope.user = {};
  uid = store.get("mUID");
  accessToken = store.get("mAccessToken");
  username = store.get("mUsername");
  if (uid && accessToken) {
    $scope.isLogin = true;
    $scope.user.uid = $scope.UID = uid;
    $scope.accessToken = accessToken;
    $scope.user.face_60 = $scope.user.face_120 = $scope.DEFAULT_FACE;
    $scope.user.username = username;
    $scope.privacyParam = "?access_token=" + accessToken + "&userid=" + uid;
    getUserInfo();
  }
  $scope.supportNum = "1万";
  $scope.$on("pageChange", function(e, msg) {
    return $scope.page = msg;
  });
  $scope.isMMenuOpen = false;
  $scope.toggleMMenu = toggleMMenu = function() {
    return $scope.isMMenuOpen = !$scope.isMMenuOpen;
  };
  $scope.isMDesignOpen = false;
  $scope.isMDesignOpenMask = false;
  $scope.toggleMDesign = toggleMDesign = function(type) {
    if ($scope.isMDesignOpen) {
      $scope.isMDesignOpenMask = !$scope.isMDesignOpenMask;
      $timeout(function() {
        return $scope.isMDesignOpen = !$scope.isMDesignOpen;
      }, 200);
    } else {
      $scope.isMDesignOpen = !$scope.isMDesignOpen;
      $timeout(function() {
        return $scope.isMDesignOpenMask = !$scope.isMDesignOpenMask;
      }, 200);
    }
    if ($scope.isMBillOpen) {
      toggleMBill();
    }
    if (type && $scope.isMDesignOpen) {
      $scope.$broadcast("setMDesignType", type);
    }
    if (!$scope.isMDesignOpen) {
      return $scope.$broadcast("cancelMDesingSending");
    }
  };
  $scope.isMBillOpen = false;
  $scope.isMBillOpenMask = false;
  $scope.toggleMBill = toggleMBill = function(type) {
    if ($scope.isMBillOpen) {
      $scope.isMBillOpenMask = !$scope.isMBillOpenMask;
      return $timeout(function() {
        return $scope.isMBillOpen = !$scope.isMBillOpen;
      }, 200);
    } else {
      $scope.isMBillOpen = !$scope.isMBillOpen;
      return $timeout(function() {
        return $scope.isMBillOpenMask = !$scope.isMBillOpenMask;
      }, 100);
    }
  };
  $scope.logout = function() {
    $scope.user = {};
    $cookieStore.remove("mUID");
    $cookieStore.remove("mAccessToken");
    return $scope.isLogin = false;
  };
  elMwrap = DOC["getElementById"]("m-wrap");
  $scope.scrollBody1Px = function() {
    if (elMwrap["scrollTop"] === 0) {
      return elMwrap["scrollTop"] = 1;
    }
  };
  return $scope.backToTop = function(isM) {
    return (isM ? elMwrap : BODY)["scrollTop"] = 0;
  };
});

// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("welcomeCtrl", [
  "$scope", function($scope) {
    $scope.$on("$viewContentLoaded", function() {
      return $scope.$emit("pageChange", "welcome");
    });
    $scope.$watch("email + password", function() {
      return $scope.isLoginValid = $scope.email && $scope.password;
    });
    $scope.isLoginBox = false;
    $scope.isLoging = false;
    $scope.isReging = false;
    $scope.toggleLogin = function() {
      return $scope.isLoginBox = !$scope.isLoginBox;
    };
    $scope.loginSubmit = function() {
      return $scope.isLoging = true;
    };
    $scope.regSubmit = function() {
      return $scope.isReging = true;
    };
    return false;
  }
]);
